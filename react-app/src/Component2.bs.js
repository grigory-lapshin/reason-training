// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Example");

function rString(string) {
  return string;
}

function actionButton(disabled) {
  return Css.style(/* :: */[
              Css.background(disabled ? Css.darkgray : Css.white),
              /* :: */[
                Css.color(Css.red),
                /* :: */[
                  Css.fontSize(Css.em(2.9)),
                  /* :: */[
                    Css.border(Css.px(1), Css.solid, Css.black),
                    /* :: */[
                      Css.borderRadius(Css.px(3)),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]);
}

var Styles = /* module */[/* actionButton */actionButton];

var component$1 = ReasonReact.statelessComponent("ButtonT");

function make(onClick, children) {
  return /* record */[
          /* debugName */component$1[/* debugName */0],
          /* reactClassInternal */component$1[/* reactClassInternal */1],
          /* handedOffState */component$1[/* handedOffState */2],
          /* willReceiveProps */component$1[/* willReceiveProps */3],
          /* didMount */component$1[/* didMount */4],
          /* didUpdate */component$1[/* didUpdate */5],
          /* willUnmount */component$1[/* willUnmount */6],
          /* willUpdate */component$1[/* willUpdate */7],
          /* shouldUpdate */component$1[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement("button", {
                          className: actionButton(false),
                          onClick: onClick
                        }, children);
            }),
          /* initialState */component$1[/* initialState */10],
          /* retainedProps */component$1[/* retainedProps */11],
          /* reducer */component$1[/* reducer */12],
          /* jsElementWrapped */component$1[/* jsElementWrapped */13]
        ];
}

var ButtonT = /* module */[
  /* component */component$1,
  /* make */make
];

function make$1(greeting, onClick, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1];
              var message = "You've clicked this " + (String(match[/* count */0]) + " times(s)");
              var match$1 = self[/* state */1][/* show */1];
              return React.createElement("div", undefined, ReasonReact.element(undefined, undefined, make((function (_event) {
                                    return Curry._1(self[/* send */3], /* Click */0);
                                  }), /* array */[message])), React.createElement("button", {
                              onClick: (function (_event) {
                                  return Curry._1(self[/* send */3], /* Toggle */1);
                                })
                            }, "Toggle greeting"), match$1 ? greeting : null);
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* count */0,
                      /* show */true
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[
                            /* count */state[/* count */0],
                            /* show */!state[/* show */1]
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* count */state[/* count */0] + 1 | 0,
                            /* show */state[/* show */1]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.rString = rString;
exports.Styles = Styles;
exports.ButtonT = ButtonT;
exports.make = make$1;
/* component Not a pure module */
